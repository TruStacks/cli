"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[269],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=o.createContext({}),p=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),h=a,d=u["".concat(i,".").concat(h)]||u[h]||m[h]||r;return n?o.createElement(d,l(l({ref:t},c),{},{components:n})):o.createElement(d,l({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var p=2;p<r;p++)l[p]=n[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2158:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>p,toc:()=>m});var o=n(7462),a=(n(7294),n(3905)),r=n(4996),l=n(941);const s={sidebar_position:3,slug:"/toolchains/components"},i="Components",p={unversionedId:"core-concepts/toolchains/components",id:"core-concepts/toolchains/components",title:"Components",description:"Components are the software tools that are deployed in the toolchain that enable software delivery.",source:"@site/docs/core-concepts/toolchains/components.mdx",sourceDirName:"core-concepts/toolchains",slug:"/toolchains/components",permalink:"/toolchains/components",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,slug:"/toolchains/components"},sidebar:"defaultSidebar",previous:{title:"Toolchains",permalink:"/category/toolchains"},next:{title:"Catalogs",permalink:"/toolchains/catalogs"}},c={},m=[{value:"Types of Components",id:"types-of-components",level:2},{value:"Core Components",id:"core-components",level:3},{value:"Single Sign-On",id:"single-sign-on",level:4},{value:"CI/CD Execution",id:"cicd-execution",level:4},{value:"Supplemental Components",id:"supplemental-components",level:3},{value:"Orchestration",id:"orchestration",level:2},{value:"Helm",id:"helm",level:3},{value:"Values Templates",id:"values-templates",level:4},{value:"Hooks",id:"hooks",level:3}],u={toc:m};function h(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"components"},"Components"),(0,a.kt)("p",null,"Components are the software tools that are deployed in the toolchain that enable software delivery."),(0,a.kt)("h2",{id:"types-of-components"},"Types of Components"),(0,a.kt)("p",null,"Toolchains contain two types of Components."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Core Components "),(0,a.kt)("li",{parentName:"ul"},"Supplemental Components")),(0,a.kt)("h3",{id:"core-components"},"Core Components"),(0,a.kt)("p",null,"Every toolchain includes core components that provide the following capabilities:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Single Sign-On (SSO)"),(0,a.kt)("li",{parentName:"ul"},"CI/CD")),(0,a.kt)("h4",{id:"single-sign-on"},"Single Sign-On"),(0,a.kt)("p",null,"SSO provides seamless access to toolchain components."),(0,a.kt)("p",null,"All components that allow authenticated access from a user interface must support the ",(0,a.kt)("a",{parentName:"p",href:"https://openid.net/connect/"},"OpenID Connect")," (OIDC) protocol."),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"SSO component")," is installed in the toolchain to issue OIDC client ids and secrets to peer components."),(0,a.kt)("admonition",{title:"saml support",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"SAML is not currently supported, but it may be added in the future.")),(0,a.kt)("h4",{id:"cicd-execution"},"CI/CD Execution"),(0,a.kt)("p",null,"Continous integration and deployment is the primary function of the toolchain and its related components."),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"CI/CD")," component is installed in the toolchain to orchestrate the deployment of pipeline resources and excuction of CI/CD tasks."),(0,a.kt)("h3",{id:"supplemental-components"},"Supplemental Components"),(0,a.kt)("p",null,"In addition to the core components, supplemental components provide extended capabilities for CI/CD tasks such as:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"code quality scanning"),(0,a.kt)("li",{parentName:"ul"},"gitops deployments"),(0,a.kt)("li",{parentName:"ul"},"regulatory compliance reporting")),(0,a.kt)("h2",{id:"orchestration"},"Orchestration"),(0,a.kt)("p",null,"Components in the TruStacks eco-system must be orchestrated for consumption without human intervention."),(0,a.kt)("p",null,"TruStacks orchestration works as follows:"),(0,a.kt)(l.Z,{alt:"orchestration diagram",sources:{light:(0,r.Z)("/img/orchestration-white.png"),dark:(0,r.Z)("/img/orchestration-dark.png")},mdxType:"ThemedImage"}),(0,a.kt)("h3",{id:"helm"},"Helm"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://helm.sh/"},"Helm")," is used to deploy toolchain components."),(0,a.kt)("p",null,"All toolchain components originate from a base helm chart deployment. ",(0,a.kt)("a",{parentName:"p",href:"https://helm.sh/docs/topics/charts_hooks/"},"Helm hooks")," are used to automatically provision components."),(0,a.kt)("admonition",{title:"what about operators?",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Currently, helm has the best adoption. Operators may be supported in the future.")),(0,a.kt)("h4",{id:"values-templates"},"Values Templates"),(0,a.kt)("p",null,"Component helm chart values are generated using values file templates."),(0,a.kt)("p",null,"The following is a sample ",(0,a.kt)("inlineCode",{parentName:"p"},"values")," template from a ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/TruStacks/catalog/blob/main/pkg/components/authentik/config.yaml"},"component configuration"),". "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'{{- $postgresqlPassword := randAlphaNum 32 -}}\nauthentik:\n  secret_key: {{ randAlphaNum 32 }}\n  postgresql:\n    host: authentik-postgresql\n    password: {{ $postgresqlPassword }}\ningress:\n  enabled: true\n  hosts:\n  - host: authentik.{{ .domain }}\n  paths:\n  - path: "/"\n    pathType: "Prefix"\npostgresql:\n  enabled: true\n  postgresqlPassword: {{ $postgresqlPassword }}\n  fullnameOverride: authentik-postgresql\nredis:\n  enabled: true\nenvValueFrom:\n  AUTHENTIK_BOOTSTRAP_TOKEN:\n    secretKeyRef:\n      name: authentik-bootstrap\n      key: api-token\n')),(0,a.kt)("p",null,"The values template uses the same ",(0,a.kt)("a",{parentName:"p",href:"http://masterminds.github.io/sprig/"},"sprig")," template functions as helm."),(0,a.kt)("p",null,"The above example requires the ",(0,a.kt)("inlineCode",{parentName:"p"},"domain")," parameter to be defined in order to render the template. The parameters are set in the toolchain configuration and passed to the values template during the ",(0,a.kt)("a",{parentName:"p",href:"/tutorial/install-toolchain#configuration"},"toolchain installation"),"."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The parameters that can be consumed by values templates are defined in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/TruStacks/catalog/blob/main/pkg/catalog/catalog.yaml"},"catalog config")," referenced in the toolchain dependencies.")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Catalogs are covered in greater detail ",(0,a.kt)("a",{parentName:"p",href:"/toolchains/catalogs"},"here"))),(0,a.kt)("h3",{id:"hooks"},"Hooks"),(0,a.kt)("p",null,"TruStacks components perform provisioning tasks during different phases of the helm installation process."),(0,a.kt)("p",null,"The tasks executed in the hook are provided by the catalog container image running in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/TruStacks/catalog#hook"},(0,a.kt)("inlineCode",{parentName:"a"},"hook mode")),". The component hooks are fully self-contained without any intervention or extra logic provided by the toolchain or engine. "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"pre-install"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"create oidc clients and secrets"),(0,a.kt)("li",{parentName:"ul"},"create secrets needed by the component before release")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"post-install"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"configure service accounts, user groups and rbac roles"),(0,a.kt)("li",{parentName:"ul"},"create system inputs")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This list is not comprehensive. There are an unlimited number of tasks that can be preferred in hooks.")))}h.isMDXComponent=!0}}]);